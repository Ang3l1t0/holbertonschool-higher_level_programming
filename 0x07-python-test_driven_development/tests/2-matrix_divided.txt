# 2-matrix_divided.txt
# Angel Palma <1546@holbertonschool.com>

===========================
How to Use 2-matrix_divided.py
===========================

This module defines a function divides all elements of a matrix ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)``` returns the division of it's two arguments. For numbers,
that value is equivalent to using the ``/`` operator.
---------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

The function accepts negative divisors

::

    >>> matrix_divided(matrix, -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

If divisor is equal to 0

::

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

If divisor is not a number

::

    >>> matrix_divided(matrix, 'a')
    Traceback (most recent call last):
    TypeError: div must be a number

The divisor can be float number

::

    >>> matrix_divided(matrix, 2.3)
    [[0.43, 0.87, 1.3], [1.74, 2.17, 2.61]]

Missing one argument

::

    >>> matrix_divided(matrix,)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Missing two arguments

::

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

If is not a list of list [[],[]]

::

    >>> matrix_divided([1,2,3], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

If matrix arguments have not the same size

::

    >>> matrix_divided([[1, 2], [2, 4, 6]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

The function could accept multiple matrix row

::

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6],
    ...     [7, 8, 9]
    ... ]
    >>> matrix_divided(matrix , 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [1, 2, "holberton"],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 7.8))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

If the function receives a div = float(inf)

::

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6],
    ...     [7, 8, 9]
    ... ]
