# 0-add_integer.txt
# Angel Palma <1546@holbertonschool.com>

===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.
---------------------

>>> add_integer = __import__('0-add_integer').add_integer

    >>> add_integer(1, 2)
    3

The function receives negative numbers

::

    >>> add_integer(100, -2)
    98


The function receives single number and will be
added to the b default value of 98.

::

    >>> add_integer(2)
    100


The function receives float numbers

::

    >>> add_integer(100.3, -2)
    98

The function receives float negative numbers

::

    >>> add_integer(100, -2.4)
    98

If b is not a numbers

::

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

The function expects you to miss at least one parameter.

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

Cannot convert float NaN to integer

 ::
    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

If the function receives as parameter float('inf')

::
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(-float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer